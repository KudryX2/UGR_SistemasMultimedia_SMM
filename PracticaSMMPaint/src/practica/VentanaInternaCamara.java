
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.image.BufferedImage;

/**
 *
 * @author Kudry
 */
public class VentanaInternaCamara extends VentanaInterna{

    private Webcam camara = null;
    /**
     * Creates new form VentanaInternaVideo2
     */
    private VentanaInternaCamara(int x, int y, Frame FRAME) {
        super(x,y,"Webcam",FRAME);
        initComponents();
        
        camara = Webcam.getDefault();
        if(camara != null){
            Dimension resoluciones[] = camara.getViewSizes();
            Dimension maxRes = resoluciones[resoluciones.length-1];
            camara.setViewSize(maxRes);
            
            WebcamPanel areaVisual = new WebcamPanel(camara);
            if(areaVisual != null){
                getContentPane().add(areaVisual, BorderLayout.CENTER);
                pack();
            }
            
        }
        
    }

    /**
     * Devuelve una instancia de la camara, solo se puede abrir asi ya que
     * solo puede estar activa en un objeto
     * @return 
     */
    public static VentanaInternaCamara getInstance(){ 
        VentanaInternaCamara v = new VentanaInternaCamara(0,0,null);
        return (v.getCamara()!=null?v:null);
    }

    @Override
    public BufferedImage getScreenShot(){
        return camara.getImage();
    }
    
    public Webcam getCamara(){
        return camara;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        camara.close();
    }//GEN-LAST:event_formInternalFrameClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
